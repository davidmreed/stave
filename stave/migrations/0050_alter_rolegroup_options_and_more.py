# Generated by Django 5.2.3 on 2025-08-23 18:47

from django.db import migrations, models


def migrate_insurance_field(apps, schema_editor):
    User = apps.get_model("stave", "User")

    for user in User.objects.filter(wftda_insurance_number__isnull=False):
        user.insurance = f"WFTDI {user.wftda_insurance_number}"
        user.save()

    ApplicationForm = apps.get_model("stave", "ApplicationForm")

    for application_form in ApplicationForm.objects.all():
        if "wftda_insurance_number" in application_form.requires_profile_fields:
            application_form.requires_profile_fields = [
                field if field != "wftda_insurance_number" else "insurance"
                for field in application_form.requires_profile_fields
            ]
            application_form.save()


class Migration(migrations.Migration):
    dependencies = [
        ("stave", "0049_alter_messagetemplate_name"),
    ]

    operations = [
        migrations.AlterModelOptions(
            name="rolegroup",
            options={"ordering": ["name"]},
        ),
        migrations.AddField(
            model_name="user",
            name="insurance",
            field=models.CharField(blank=True, max_length=256, null=True),
        ),
        migrations.RunPython(migrate_insurance_field),
        migrations.RemoveField(
            model_name="user",
            name="wftda_insurance_number",
        ),
        migrations.AlterField(
            model_name="applicationform",
            name="application_kind",
            field=models.IntegerField(
                choices=[(1, "Assign Only"), (2, "Confirm then Assign")],
                help_text="Choose Assign Only to contact applicants only once, when the schedule is finalized. Choose Confirm then Assign to send acceptance messages first, then follow with a schedule.",
                verbose_name="application process",
            ),
        ),
        migrations.AlterField(
            model_name="applicationform",
            name="requires_profile_fields",
            field=models.JSONField(
                blank=True,
                default=list,
                help_text="You can accept standard fields from the user's profile without requiring them to re-type their information. You always receive the Derby Name field.",
            ),
        ),
        migrations.AlterField(
            model_name="user",
            name="preferred_name",
            field=models.CharField(max_length=256, verbose_name="derby name"),
        ),
    ]
